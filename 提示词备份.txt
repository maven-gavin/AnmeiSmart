## 🏗️ 现有基础设施环境说明

你正在为一个项目设计应用架构，该项目有完整的 Docker Compose 基础设施环境可供使用。请根据以下可用资源和我的具体业务需求，为我设计最优的应用架构方案。

### 🔧 可用基础设施资源

#### 📊 数据存储层
- **PostgreSQL** (`localhost:5432`) - 主关系型数据库，适用于事务性数据
- **MySQL 8.0** (`localhost:3306`) - 备用关系型数据库，当前被RAGFlow使用
- **Redis** (`localhost:6379`) - 缓存、会话存储、消息队列
- **MongoDB** (`localhost:27017`) - 文档型NoSQL数据库，适用于非结构化数据
- **Milvus** (`localhost:19530`) - 向量数据库，支持AI/ML向量搜索
- **Elasticsearch** (`localhost:9200`) - 全文搜索引擎，支持复杂查询和分析

#### 🗄️ 对象存储
- **MinIO** (`localhost:9000/9001`) - S3兼容的对象存储，适用于文件、图片、视频等

#### 🤖 AI/ML服务
- **阿里云通义千问API** - 已配置可用的大语言模型服务
  - 模型选项：`qwen-plus`(推荐)、`qwen-max`、`qwen-turbo`、`qwen-long`
  - 支持中文理解，成本较低，响应快速
- **RAGFlow** (`localhost:10000`) - 文档解析和RAG(检索增强生成)服务
- **GraphRAG** (`localhost:8000`, 可选) - 知识图谱构建和查询服务

#### ⚙️ 工作流和集成
- **n8n** (`localhost:5678`) - 可视化工作流自动化引擎，支持API集成和数据处理

#### 🔐 认证和配置
- 统一的环境变量配置（`.env`文件）
- 自动数据库初始化脚本
- 容器化部署，易于扩展和维护

### 📋 架构设计要求

请基于我的业务需求，从以下维度为我设计应用架构：

1. **数据架构**：
   - 根据数据类型选择合适的数据库（关系型/NoSQL/向量/搜索）
   - 设计数据流和存储策略
   - 考虑缓存策略和性能优化

2. **应用架构**：
   - 微服务设计模式
   - API设计和服务间通信
   - 负载均衡和容错机制

3. **AI/ML集成**：
   - 如何利用现有的AI服务（通义千问、RAGFlow、GraphRAG）
   - 向量化数据存储和检索策略
   - 智能化功能实现方案

4. **工作流设计**：
   - 利用n8n进行业务流程自动化
   - 数据处理和集成管道
   - 第三方服务集成

5. **部署和运维**：
   - Docker Compose 服务编排
   - 监控和日志策略
   - 数据备份和灾难恢复

### 🎯 请告诉我你的具体业务需求

为了给出最合适的架构，请结合本项目 @需求.md @README.md 文档，为你设计一个高效、可扩展、成本优化的应用架构方案。
