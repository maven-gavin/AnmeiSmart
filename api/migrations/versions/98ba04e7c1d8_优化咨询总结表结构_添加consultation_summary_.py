"""优化咨询总结表结构：添加consultation_summary JSON字段和consultation_type枚举

Revision ID: 98ba04e7c1d8
Revises: 224805fd3d7a
Create Date: 2025-06-13 19:33:01.835904

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '98ba04e7c1d8'
down_revision: Union[str, None] = '224805fd3d7a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 1. 先创建枚举类型
    consultation_type_enum = postgresql.ENUM(
        'initial', 'follow_up', 'emergency', 'specialized', 'other', 
        name='consultation_type'
    )
    consultation_type_enum.create(op.get_bind())
    
    # 2. 添加consultation_summary JSON字段
    op.add_column('conversations', sa.Column('consultation_summary', sa.JSON(), nullable=True, comment='\n    结构化咨询总结 JSON格式:\n    {\n        "basic_info": {\n            "start_time": "2024-01-01T09:00:00Z",\n            "end_time": "2024-01-01T10:30:00Z", \n            "duration_minutes": 90,\n            "type": "initial",\n            "consultant_id": "consultant_id",\n            "customer_id": "customer_id"\n        },\n        "main_issues": [\n            "问题1描述",\n            "问题2描述"\n        ],\n        "solutions": [\n            "解决方案1",\n            "解决方案2"\n        ],\n        "follow_up_plan": [\n            "跟进计划1",\n            "跟进计划2"\n        ],\n        "satisfaction_rating": 5,\n        "additional_notes": "补充备注",\n        "tags": ["标签1", "标签2"],\n        "ai_generated": false,\n        "created_at": "2024-01-01T10:30:00Z",\n        "updated_at": "2024-01-01T10:30:00Z",\n        "version": 1\n    }\n    '))
    
    # 3. 修改consultation_type列类型为枚举
    op.alter_column('conversations', 'consultation_type',
               existing_type=sa.VARCHAR(),
               type_=consultation_type_enum,
               comment='咨询类型：初次咨询、复诊咨询、紧急咨询、专项咨询、其他',
               existing_comment='咨询类型',
               existing_nullable=True,
               postgresql_using='consultation_type::consultation_type')
    
    # 4. 更新summary字段注释
    op.alter_column('conversations', 'summary',
               existing_type=sa.TEXT(),
               comment='会话简短摘要（向后兼容）',
               existing_comment='会话总结',
               existing_nullable=True)
    
    # 5. 更新messages表type字段注释和索引
    op.alter_column('messages', 'type',
               existing_type=postgresql.ENUM('text', 'media', 'system', 'structured', name='message_type'),
               comment='消息主类型',
               existing_nullable=False)
    op.create_index(op.f('ix_messages_type'), 'messages', ['type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 1. 删除索引
    op.drop_index(op.f('ix_messages_type'), table_name='messages')
    
    # 2. 恢复messages表type字段注释
    op.alter_column('messages', 'type',
               existing_type=postgresql.ENUM('text', 'media', 'system', 'structured', name='message_type'),
               comment=None,
               existing_comment='消息主类型',
               existing_nullable=False)
    
    # 3. 恢复summary字段注释
    op.alter_column('conversations', 'summary',
               existing_type=sa.TEXT(),
               comment='会话总结',
               existing_comment='会话简短摘要（向后兼容）',
               existing_nullable=True)
    
    # 4. 先将consultation_type列转换回VARCHAR
    op.alter_column('conversations', 'consultation_type',
               existing_type=sa.Enum('initial', 'follow_up', 'emergency', 'specialized', 'other', name='consultation_type'),
               type_=sa.VARCHAR(),
               comment='咨询类型',
               existing_comment='咨询类型：初次咨询、复诊咨询、紧急咨询、专项咨询、其他',
               existing_nullable=True)
    
    # 5. 删除consultation_summary字段
    op.drop_column('conversations', 'consultation_summary')
    
    # 6. 最后删除枚举类型
    consultation_type_enum = postgresql.ENUM(name='consultation_type')
    consultation_type_enum.drop(op.get_bind())
    # ### end Alembic commands ###
