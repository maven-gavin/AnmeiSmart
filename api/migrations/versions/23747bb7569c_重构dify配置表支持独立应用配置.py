"""重构dify配置表支持独立应用配置

Revision ID: 23747bb7569c
Revises: 848ce2a2d9bf
Create Date: 2025-07-21 13:03:41.895638

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '23747bb7569c'
down_revision: Union[str, None] = '848ce2a2d9bf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # 获取数据库连接
    connection = op.get_bind()
    
    # 1. 备份现有数据
    result = connection.execute(sa.text("SELECT * FROM dify_configs"))
    existing_configs = result.fetchall()
    
    # 2. 添加新字段（先设为可空）
    op.add_column('dify_configs', sa.Column('environment', sa.String(length=100), nullable=True, comment='环境名称（dev/test/prod）'))
    op.add_column('dify_configs', sa.Column('app_id', sa.String(length=255), nullable=True, comment='应用ID'))
    op.add_column('dify_configs', sa.Column('app_name', sa.String(length=255), nullable=True, comment='应用名称'))
    op.add_column('dify_configs', sa.Column('api_key', sa.Text(), nullable=True, comment='API密钥（加密存储）'))
    
    # 3. 先删除现有数据（因为新结构不兼容）
    connection.execute(sa.text("DELETE FROM dify_configs"))
    
    # 4. 修改字段为非空
    op.alter_column('dify_configs', 'environment', nullable=False)
    op.alter_column('dify_configs', 'app_id', nullable=False)
    op.alter_column('dify_configs', 'app_name', nullable=False)
    op.alter_column('dify_configs', 'api_key', nullable=False)
    
    # 5. 修改其他字段
    op.alter_column('dify_configs', 'timeout_seconds',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_comment='请求超时时间（秒）')
    op.alter_column('dify_configs', 'max_retries',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_comment='最大重试次数')
    op.alter_column('dify_configs', 'enabled',
               existing_type=sa.BOOLEAN(),
               comment='是否启用配置',
               existing_comment='是否启用',
               existing_nullable=False)
    
    # 6. 删除旧字段
    op.drop_column('dify_configs', 'summary_api_key')
    op.drop_column('dify_configs', 'beauty_app_id')
    op.drop_column('dify_configs', 'beauty_api_key')
    op.drop_column('dify_configs', 'chat_api_key')
    op.drop_column('dify_configs', 'chat_app_id')
    op.drop_column('dify_configs', 'summary_app_id')
    op.drop_column('dify_configs', 'config_name')
    
    # 7. 创建新索引
    op.create_index('idx_dify_config_environment', 'dify_configs', ['environment'], unique=False)
    op.create_index('idx_dify_config_env_app', 'dify_configs', ['environment', 'app_id'], unique=True)
    
    # 8. 其他表的更新
    op.alter_column('conversations', 'customer_id',
               existing_type=sa.VARCHAR(length=36),
               comment='客户用户ID',
               existing_comment='顾客用户ID',
               existing_nullable=False)
    op.alter_column('customer_profiles', 'customer_id',
               existing_type=sa.VARCHAR(length=36),
               comment='客户用户ID',
               existing_comment='顾客用户ID',
               existing_nullable=False)
    op.create_table_comment(
        'customers',
        '客户表，存储客户扩展信息',
        existing_comment='顾客表，存储顾客扩展信息',
        schema=None
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table_comment(
        'customers',
        '顾客表，存储顾客扩展信息',
        existing_comment='客户表，存储客户扩展信息',
        schema=None
    )
    op.alter_column('customer_profiles', 'customer_id',
               existing_type=sa.VARCHAR(length=36),
               comment='顾客用户ID',
               existing_comment='客户用户ID',
               existing_nullable=False)
    op.alter_column('conversations', 'customer_id',
               existing_type=sa.VARCHAR(length=36),
               comment='顾客用户ID',
               existing_comment='客户用户ID',
               existing_nullable=False)
    op.drop_index('idx_dify_config_env_app', table_name='dify_configs')
    op.drop_index('idx_dify_config_environment', table_name='dify_configs')
    op.add_column('dify_configs', sa.Column('config_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('dify_configs', sa.Column('summary_app_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('dify_configs', sa.Column('chat_app_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('dify_configs', sa.Column('chat_api_key', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('dify_configs', sa.Column('beauty_api_key', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('dify_configs', sa.Column('beauty_app_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('dify_configs', sa.Column('summary_api_key', sa.TEXT(), autoincrement=False, nullable=True))
    op.alter_column('dify_configs', 'enabled',
               existing_type=sa.BOOLEAN(),
               comment='是否启用',
               existing_comment='是否启用配置',
               existing_nullable=False)
    op.alter_column('dify_configs', 'max_retries',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_comment='最大重试次数')
    op.alter_column('dify_configs', 'timeout_seconds',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_comment='请求超时时间（秒）')
    op.drop_column('dify_configs', 'api_key')
    op.drop_column('dify_configs', 'app_name')
    op.drop_column('dify_configs', 'app_id')
    op.drop_column('dify_configs', 'environment')
    # ### end Alembic commands ###
