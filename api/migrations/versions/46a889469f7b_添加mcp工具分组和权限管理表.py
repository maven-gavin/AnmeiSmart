"""添加MCP工具分组和权限管理表

Revision ID: 46a889469f7b
Revises: 5463f544b90c
Create Date: 2025-07-26 23:42:40.656042

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '46a889469f7b'
down_revision: Union[str, None] = '5463f544b90c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table_comment(
        'dify_configs',
        'Dify配置表，存储独立的Dify应用配置',
        existing_comment='Dify配置表，存储Dify应用配置',
        schema=None
    )
    op.add_column('mcp_call_logs', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('mcp_call_logs', 'caller_app_id',
               existing_type=sa.VARCHAR(length=100),
               comment='调用方应用ID（如Dify AppID）',
               existing_comment='调用方应用ID（Dify AppID）',
               existing_nullable=True)
    op.alter_column('mcp_call_logs', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='调用时间',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_mcp_call_logs_caller_time', table_name='mcp_call_logs')
    op.drop_index('idx_mcp_call_logs_group_time', table_name='mcp_call_logs')
    op.drop_index('idx_mcp_call_logs_tool_success_time', table_name='mcp_call_logs')
    op.create_index(op.f('ix_mcp_call_logs_caller_app_id'), 'mcp_call_logs', ['caller_app_id'], unique=False)
    op.create_index(op.f('ix_mcp_call_logs_created_at'), 'mcp_call_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_mcp_call_logs_group_id'), 'mcp_call_logs', ['group_id'], unique=False)
    op.create_index(op.f('ix_mcp_call_logs_id'), 'mcp_call_logs', ['id'], unique=False)
    op.create_index(op.f('ix_mcp_call_logs_success'), 'mcp_call_logs', ['success'], unique=False)
    op.create_index(op.f('ix_mcp_call_logs_tool_name'), 'mcp_call_logs', ['tool_name'], unique=False)
    op.create_table_comment(
        'mcp_call_logs',
        'MCP调用日志表，记录工具调用历史和性能数据',
        existing_comment='MCP调用日志表，记录所有工具调用的详细信息',
        schema=None
    )
    op.add_column('mcp_tool_groups', sa.Column('user_tier_access', sa.JSON(), nullable=True, comment='允许访问的用户层级'))
    op.add_column('mcp_tool_groups', sa.Column('allowed_roles', sa.JSON(), nullable=True, comment='允许访问的角色列表'))
    op.alter_column('mcp_tool_groups', 'api_key',
               existing_type=sa.VARCHAR(length=255),
               comment='API密钥',
               existing_comment='分组API密钥',
               existing_nullable=False)
    op.alter_column('mcp_tool_groups', 'enabled',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='是否启用',
               existing_nullable=False)
    op.alter_column('mcp_tool_groups', 'created_by',
               existing_type=sa.VARCHAR(length=36),
               nullable=False,
               existing_comment='创建者ID')
    op.alter_column('mcp_tool_groups', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='创建时间',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('mcp_tool_groups', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='更新时间',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_mcp_tool_groups_created_by', table_name='mcp_tool_groups')
    op.drop_index('idx_mcp_tool_groups_enabled', table_name='mcp_tool_groups')
    op.drop_constraint('mcp_tool_groups_name_key', 'mcp_tool_groups', type_='unique')
    op.create_index(op.f('ix_mcp_tool_groups_api_key'), 'mcp_tool_groups', ['api_key'], unique=True)
    op.create_index(op.f('ix_mcp_tool_groups_enabled'), 'mcp_tool_groups', ['enabled'], unique=False)
    op.create_index(op.f('ix_mcp_tool_groups_id'), 'mcp_tool_groups', ['id'], unique=False)
    op.create_index(op.f('ix_mcp_tool_groups_name'), 'mcp_tool_groups', ['name'], unique=True)
    op.drop_constraint('mcp_tool_groups_created_by_fkey', 'mcp_tool_groups', type_='foreignkey')
    op.create_table_comment(
        'mcp_tool_groups',
        'MCP工具分组表，管理API密钥和权限控制',
        existing_comment='MCP工具分组表，按分组管理API Key权限',
        schema=None
    )
    op.add_column('mcp_tools', sa.Column('name', sa.String(length=100), nullable=False, comment='工具名称'))
    op.add_column('mcp_tools', sa.Column('function_name', sa.String(length=100), nullable=False, comment='函数名称'))
    op.alter_column('mcp_tools', 'enabled',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='是否启用',
               existing_nullable=False)
    op.alter_column('mcp_tools', 'timeout_seconds',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_comment='超时时间（秒）',
               existing_nullable=False)
    op.alter_column('mcp_tools', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='创建时间',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('mcp_tools', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='更新时间',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index('idx_mcp_tools_group_enabled', table_name='mcp_tools')
    op.drop_index('idx_mcp_tools_tool_name', table_name='mcp_tools')
    op.drop_constraint('mcp_tools_tool_name_key', 'mcp_tools', type_='unique')
    op.create_index(op.f('ix_mcp_tools_enabled'), 'mcp_tools', ['enabled'], unique=False)
    op.create_index(op.f('ix_mcp_tools_group_id'), 'mcp_tools', ['group_id'], unique=False)
    op.create_index(op.f('ix_mcp_tools_id'), 'mcp_tools', ['id'], unique=False)
    op.create_index(op.f('ix_mcp_tools_name'), 'mcp_tools', ['name'], unique=False)
    op.create_table_comment(
        'mcp_tools',
        'MCP工具表，存储工具配置和元数据',
        existing_comment='MCP工具配置表，管理工具的详细配置',
        schema=None
    )
    op.drop_column('mcp_tools', 'tool_name')
    op.drop_column('mcp_tools', 'version')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('mcp_tools', sa.Column('version', sa.VARCHAR(length=20), server_default=sa.text("'1.0.0'::character varying"), autoincrement=False, nullable=False, comment='工具版本'))
    op.add_column('mcp_tools', sa.Column('tool_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='工具名称'))
    op.create_table_comment(
        'mcp_tools',
        'MCP工具配置表，管理工具的详细配置',
        existing_comment='MCP工具表，存储工具配置和元数据',
        schema=None
    )
    op.drop_index(op.f('ix_mcp_tools_name'), table_name='mcp_tools')
    op.drop_index(op.f('ix_mcp_tools_id'), table_name='mcp_tools')
    op.drop_index(op.f('ix_mcp_tools_group_id'), table_name='mcp_tools')
    op.drop_index(op.f('ix_mcp_tools_enabled'), table_name='mcp_tools')
    op.create_unique_constraint('mcp_tools_tool_name_key', 'mcp_tools', ['tool_name'])
    op.create_index('idx_mcp_tools_tool_name', 'mcp_tools', ['tool_name'], unique=False)
    op.create_index('idx_mcp_tools_group_enabled', 'mcp_tools', ['group_id', 'enabled'], unique=False)
    op.alter_column('mcp_tools', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('mcp_tools', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('mcp_tools', 'timeout_seconds',
               existing_type=sa.INTEGER(),
               server_default=sa.text('30'),
               existing_comment='超时时间（秒）',
               existing_nullable=False)
    op.alter_column('mcp_tools', 'enabled',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_comment='是否启用',
               existing_nullable=False)
    op.drop_column('mcp_tools', 'function_name')
    op.drop_column('mcp_tools', 'name')
    op.create_table_comment(
        'mcp_tool_groups',
        'MCP工具分组表，按分组管理API Key权限',
        existing_comment='MCP工具分组表，管理API密钥和权限控制',
        schema=None
    )
    op.create_foreign_key('mcp_tool_groups_created_by_fkey', 'mcp_tool_groups', 'users', ['created_by'], ['id'], ondelete='SET NULL')
    op.drop_index(op.f('ix_mcp_tool_groups_name'), table_name='mcp_tool_groups')
    op.drop_index(op.f('ix_mcp_tool_groups_id'), table_name='mcp_tool_groups')
    op.drop_index(op.f('ix_mcp_tool_groups_enabled'), table_name='mcp_tool_groups')
    op.drop_index(op.f('ix_mcp_tool_groups_api_key'), table_name='mcp_tool_groups')
    op.create_unique_constraint('mcp_tool_groups_name_key', 'mcp_tool_groups', ['name'])
    op.create_index('idx_mcp_tool_groups_enabled', 'mcp_tool_groups', ['enabled'], unique=False)
    op.create_index('idx_mcp_tool_groups_created_by', 'mcp_tool_groups', ['created_by'], unique=False)
    op.alter_column('mcp_tool_groups', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('mcp_tool_groups', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('mcp_tool_groups', 'created_by',
               existing_type=sa.VARCHAR(length=36),
               nullable=True,
               existing_comment='创建者ID')
    op.alter_column('mcp_tool_groups', 'enabled',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_comment='是否启用',
               existing_nullable=False)
    op.alter_column('mcp_tool_groups', 'api_key',
               existing_type=sa.VARCHAR(length=255),
               comment='分组API密钥',
               existing_comment='API密钥',
               existing_nullable=False)
    op.drop_column('mcp_tool_groups', 'allowed_roles')
    op.drop_column('mcp_tool_groups', 'user_tier_access')
    op.create_table_comment(
        'mcp_call_logs',
        'MCP调用日志表，记录所有工具调用的详细信息',
        existing_comment='MCP调用日志表，记录工具调用历史和性能数据',
        schema=None
    )
    op.drop_index(op.f('ix_mcp_call_logs_tool_name'), table_name='mcp_call_logs')
    op.drop_index(op.f('ix_mcp_call_logs_success'), table_name='mcp_call_logs')
    op.drop_index(op.f('ix_mcp_call_logs_id'), table_name='mcp_call_logs')
    op.drop_index(op.f('ix_mcp_call_logs_group_id'), table_name='mcp_call_logs')
    op.drop_index(op.f('ix_mcp_call_logs_created_at'), table_name='mcp_call_logs')
    op.drop_index(op.f('ix_mcp_call_logs_caller_app_id'), table_name='mcp_call_logs')
    op.create_index('idx_mcp_call_logs_tool_success_time', 'mcp_call_logs', ['tool_name', 'success', 'created_at'], unique=False)
    op.create_index('idx_mcp_call_logs_group_time', 'mcp_call_logs', ['group_id', 'created_at'], unique=False)
    op.create_index('idx_mcp_call_logs_caller_time', 'mcp_call_logs', ['caller_app_id', 'created_at'], unique=False)
    op.alter_column('mcp_call_logs', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='调用时间',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('mcp_call_logs', 'caller_app_id',
               existing_type=sa.VARCHAR(length=100),
               comment='调用方应用ID（Dify AppID）',
               existing_comment='调用方应用ID（如Dify AppID）',
               existing_nullable=True)
    op.drop_column('mcp_call_logs', 'updated_at')
    op.create_table_comment(
        'dify_configs',
        'Dify配置表，存储Dify应用配置',
        existing_comment='Dify配置表，存储独立的Dify应用配置',
        schema=None
    )
    # ### end Alembic commands ###
