"""add_structured_message_type

Revision ID: 224805fd3d7a
Revises: 52d952ae7d9b
Create Date: 2025-06-10 11:33:58.379658

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '224805fd3d7a'
down_revision: Union[str, None] = '52d952ae7d9b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # 创建新的枚举类型
    op.execute("CREATE TYPE message_type AS ENUM ('text', 'media', 'system', 'structured')")
    
    # 添加临时列
    op.add_column('messages', sa.Column('type_new', sa.Enum('text', 'media', 'system', 'structured', name='message_type'), nullable=True))
    
    # 迁移现有数据
    op.execute("UPDATE messages SET type_new = type::text::message_type")
    
    # 删除旧列
    op.drop_column('messages', 'type')
    
    # 重命名新列
    op.alter_column('messages', 'type_new', new_column_name='type')
    
    # 设置非空约束
    op.alter_column('messages', 'type', nullable=False)
    
    # 删除旧的枚举类型
    op.execute("DROP TYPE IF EXISTS message_type_v2")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # 创建旧的枚举类型
    op.execute("CREATE TYPE message_type_v2 AS ENUM ('text', 'media', 'system')")
    
    # 添加临时列
    op.add_column('messages', sa.Column('type_old', postgresql.ENUM('text', 'media', 'system', name='message_type_v2'), nullable=True))
    
    # 迁移现有数据（过滤掉 structured 类型）
    op.execute("UPDATE messages SET type_old = CASE WHEN type = 'structured' THEN 'text'::message_type_v2 ELSE type::text::message_type_v2 END")
    
    # 删除旧列
    op.drop_column('messages', 'type')
    
    # 重命名新列
    op.alter_column('messages', 'type_old', new_column_name='type')
    
    # 设置非空约束
    op.alter_column('messages', 'type', nullable=False)
    
    # 删除新的枚举类型
    op.execute("DROP TYPE IF EXISTS message_type")
    # ### end Alembic commands ###
