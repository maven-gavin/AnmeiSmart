"""重构消息模型支持统一的结构化内容格式

Revision ID: 52d952ae7d9b
Revises: b77c4f6589f7
Create Date: 2025-06-10 10:35:39.045601

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '52d952ae7d9b'
down_revision: Union[str, None] = 'b77c4f6589f7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('messages', sa.Column('reply_to_message_id', sa.String(length=36), nullable=True, comment='回复的消息ID'))
    op.add_column('messages', sa.Column('reactions', sa.JSON(), nullable=True, comment="消息回应，格式: {'👍': ['user_id1', 'user_id2'], '❤️': ['user_id3']}"))
    op.add_column('messages', sa.Column('extra_metadata', sa.JSON(), nullable=True, comment="附加元数据，如: {'upload_method': 'file_picker', 'client_info': {...}}"))
    # 先删除旧的content列，然后添加新的JSON类型列
    op.drop_column('messages', 'content')
    op.add_column('messages', sa.Column('content', sa.JSON(), nullable=False, comment='结构化的消息内容 (JSON格式)'))
    op.alter_column('messages', 'type',
               existing_type=postgresql.ENUM('text', 'image', 'voice', 'file', 'system', name='message_type'),
               type_=sa.Enum('text', 'media', 'system', name='message_type_v2'),
               nullable=False,
               comment='消息主类型',
               existing_comment='消息类型')
    op.alter_column('messages', 'sender_type',
               existing_type=postgresql.ENUM('customer', 'consultant', 'doctor', 'ai', 'system', name='sender_type'),
               comment='发送者在发送消息时的角色',
               existing_comment='发送者类型',
               existing_nullable=False)
    op.create_index(op.f('ix_messages_conversation_id'), 'messages', ['conversation_id'], unique=False)
    op.create_index(op.f('ix_messages_sender_id'), 'messages', ['sender_id'], unique=False)
    op.create_index(op.f('ix_messages_type'), 'messages', ['type'], unique=False)
    op.create_foreign_key(None, 'messages', 'messages', ['reply_to_message_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'messages', type_='foreignkey')
    op.drop_index(op.f('ix_messages_type'), table_name='messages')
    op.drop_index(op.f('ix_messages_sender_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_conversation_id'), table_name='messages')
    op.alter_column('messages', 'sender_type',
               existing_type=postgresql.ENUM('customer', 'consultant', 'doctor', 'ai', 'system', name='sender_type'),
               comment='发送者类型',
               existing_comment='发送者在发送消息时的角色',
               existing_nullable=False)
    op.alter_column('messages', 'type',
               existing_type=sa.Enum('text', 'media', 'system', name='message_type_v2'),
               type_=postgresql.ENUM('text', 'image', 'voice', 'file', 'system', name='message_type'),
               nullable=True,
               comment='消息类型',
               existing_comment='消息主类型')
    # 恢复操作：删除JSON类型的content列，添加回TEXT类型列
    op.drop_column('messages', 'content')
    op.add_column('messages', sa.Column('content', sa.TEXT(), nullable=False, comment='消息内容'))
    op.drop_column('messages', 'extra_metadata')
    op.drop_column('messages', 'reactions')
    op.drop_column('messages', 'reply_to_message_id')
    # ### end Alembic commands ###
